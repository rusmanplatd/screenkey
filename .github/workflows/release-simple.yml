name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            name: Linux
          - platform: macos-latest
            name: macOS
          - platform: windows-latest
            name: Windows

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libx11-dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './screenkey-app/src-tauri -> target'

      - name: Install dependencies
        working-directory: screenkey-app
        run: npm install

      - name: Build app and create release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: './screenkey-app'
          tagName: ${{ github.ref_name }}
          releaseName: 'ScreenKey ${{ github.ref_name }}'
          releaseBody: |
            ## What's Changed
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/master/CHANGELOG.md) for details.

            ## Installation

            ### Linux
            - **AppImage**: Download and make executable
            - **Debian/Ubuntu**: Use the `.deb` package

            ### macOS
            - Download the `.dmg` file and drag to Applications

            ### Windows
            - Download and run the `.msi` installer

            ## Usage
            **Linux users:** Run with `sudo` for keyboard capture permissions.
          releaseDraft: false
          prerelease: false
